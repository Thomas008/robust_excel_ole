= RobustExcelOle

This is a simple fork from tomiacannondale's wrap_excel adapted to Ruby 1.8.6.
The functionality of wrap_excel is optimised and extended by new features.

This is work in progress.

== Description

RobustExcelOle wraps the win32ole, and uses the Excel operations with ruby.

== Requirements

* Ruby 1.9.2 or higher (platform is windows)
* also works with Ruby 1.8.6

== Install

  gem install robust_excel_ole

== Usage

=== open a book

Open a book.

book = RobustExcelOle::Book.open('./sample.xls')

Open a book with a block.

  RobustExcelOle::Book.open('./sample.xls') do |book|
    # do something
  end

Options are the following:

[:reuse]         boolean (default true)  use an already open Excel-application 
[:read_only]     boolean (default false) open in read-only mode  
[:displayalerts] boolean (default false) allow display alerts in Excel   
[:visible]       boolean (default false) make visibe in Excel                  
[:if_unsaved]    :raise (default), :accept, :forget, :new_app, :excel
                 if an unsaved book with the same name is open
          
:raise 

Raise an exception. Don't open the book.

:accept  

Let the unsaved book open.                  
                 
:forget  

Close the unsaved book, open the new book.

:new_app 

Open the new book in a new Excel application.

:excel   

Give control to Excel.
                


[:if_unsaved_other_book]  :raise (default), :save, :forget, :new_app
                          if an unsaved book with same name in a different path is open,
                 
:raise 

Raise an exception. Don't open the book.

:save    

Save and close the unsaved book and open the new book.

:forget  

Close the unsaved book, open the new book
                
:new_app 

Open the new book in a new Excel application


Examples:

Open another book in the same Excel application.

new_book = RobustExcelOle::Book.open('./different.xls')

Open another book in an used Excel applications.

new_book = RobustExcelOle::Book.open('./different.xls', :reuse => false)


=== save a book

Save a book.

book.save

Save a book with a file name.

book.save_as('./another_sample.xls')

Options are the following:

[:if_exists] :overwrite, :excel, :raise (default)

:overwrite: 

Delete the old file and write the file.

Example.

book.save('./another_sample.xls', :if_exists => :overwrite)

:excel

Give the control to Excel.

:raise

Raise an exception. Don't write the file.

  

=== == (equal)

Check whether two books are identical.

Example.

if (book == new_book) then
  puts "the books are identical"
end

=== alive?

Check whether the book is alive.

book.alive?

Example.

if book.alive? then 
  puts "the book is alive"
end

=== filename

Get the file name of the book.

book.filename

=== close a book

Close a book

book.close

Options are the following:

[:if_unsaved]  :raise (default), :save, :forget, :excel  

if the book is unsaved
                 
:raise 

Raise an exception. Don't close the book                  
                 
:save            

Save the book before closing it.                  
                 
:forget          

Close the book. 
    
:excel           

Give control to Excel



=== access sheet

A sheet object can be accessed with a Book#[] method.

  sheet = book[0]

Access with the sheet name.

    book['Sheet1']

=== access row or column

Sheet object is included enumerable. Use Sheet#each_column or Sheet#each_row or Sheet#each method.

  sheet.each do |cell|
    # do something with cell
    # read every row every column
  end

  sheet.each_row do |row|
    # do something with row_range
  end

  sheet.each_column do |column_range|
    # do something with column_range
  end

=== access cell

Read from a sheet object.

  sheet[0, 0]  => first cell.

Read from range object

  row_range[0]  => first cell in row_range
  column_range[1] => second cell in column_range



=== Want to do more things

All RobustExcelOle object include win32ole instance. If you want to do something that not provide a function, you can use win32ole methods.

== Support

Report issues and feature requests to github Issues. https://github.com/Thomas008/robust_excel_ole/issues

== Collaborate

Please pull request on github.

== Author

thomas mailto:Thomas.Raths@gmx.net

== License

MIT License. For more imformation, please see LICENSE.
