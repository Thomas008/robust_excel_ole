= RobustExcelOle

This is a simple fork from tomiacannondale's wrap_excel adapted to Ruby 1.8.6.
The functionality of wrap_excel is optimised and extended by new features.


== Description

RobustExcelOle wraps the win32ole, and uses the Excel operations with ruby.

== Requirements

* Ruby 1.9.2 or higher (platform is windows)
* also works with Ruby 1.8.6

== Install

  gem install robust_excel_ole

== Usage
=== access book

Read with block.

  RobustExcelOle::Book.open('./sample.xls') do |book|
    # do something
  end

Read without block.

  book = RobustExcelOle::Book.open('./sample.xls')
  book.close

Options are the following.

[read_only] boolean(default true)
[displayalerts] boolean(default false)
[visible] boolean(default false)

=== access sheet

Sheet object can access with Book#[] method.

  sheet = book[0]

Access with sheet name.

    book['Sheet1']

=== access row or column

Sheet object is included enumerable. Use Sheet#each_column or Sheet#each_row or Sheet#each method.

  sheet.each do |cell|
    # do something with cell
    # read every row every column
  end

  sheet.each_row do |row|
    # do something with row_range
  end

  sheet.each_column do |column_range|
    # do something with column_range
  end

=== access cell

Read from sheet object.

  sheet[0, 0]  => first cell.

Read from range object

  row_range[0]  => first cell in row_range
  column_range[1] => second cell in column_range

=== write excel

Can save an existing file.
Saves a file, if no file with the same name exists.
Proceeds acocording to the options, otherwise.

  RobustExcelOle::Book.open('./sample.xls', :read_only => false) do |book|
    # do something
    book.save '.\sample.xls'
  end

or

  book = RobustExcelOle::Book.open('./sample.xls', :read_only => false)
  book.save '.\sample.xls'
  book.close

Can save with an another file name.

  RobustExcelOle::Book.open('./sample.xls', :read_only => false) do |book|
    # do something  
    book.save './another_file.xls'
  end


Save to another_file.xls.

Options are the following:

[:if_exists] :overwrite, :excel, :raise (default)

:overwrite: 

Delete the old file and write the file.

:excel

Give the control to Excel.

:raise

Throw an exception. Don't write the file.

Example:

 RobustExcelOle::Book.open('./sample.xls', :read_only => false) do |book|
    # do something
    book.save('./another_file.xls', :if_exists => :overwrite)
  end

=== Want to do more things

All RobustExcelOle object include win32ole instance. If you want to do something that not provide a function, you can use win32ole methods.

== Support

Report issues and feature requests to github Issues. https://github.com/Thomas008/robust_excel_ole/issues

== Collaborate

Please pull request on github.

== Author

thomas mailto:traths@cs.uni-potsdam.de

== License

MIT License. For more imformation, please see LICENSE.
